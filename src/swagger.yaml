openapi: 3.0.0
info:
  title: Swagger UI
  version: 1.0.0
  description: API for managing filters and feeds
servers:
  - url: http://localhost:3000
    description: Local server
tags:
  - name: filter
    description: Operations related to filters
paths:
  /filter/{id}:
    put:
      summary: Update a filter
      description: Updates the details of a specific filter by ID.
      tags:
        - filter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Filter 1"
                type:
                  type: string
                  example: "AssetFilter"
                filterParams:
                  type: string
                  nullable: true
                  example: null
                code:
                  type: string
                  nullable: true
                  example: null
              required:
                - name
                - type
                - filterParams
                - code
      responses:
        '200':
          description: Filter updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "Filter 1"
                      type:
                        type: string
                        example: "AssetFilter"
                      filterParams:
                        type: string
                        nullable: true
                      code:
                        type: string
                        nullable: true
        '400':
          description: Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input data"
        '404':
          description: Filter not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Filter not found"
    get:
      summary: Retrieve a filter by ID
      description: Fetches the details of a specific filter by its ID.
      tags:
        - filter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Successfully retrieved filter details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "Filter 1"
                      type:
                        type: string
                        example: "AssetFilter"
                      filterParams:
                        type: string
                        nullable: true
                        example: null
                      code:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: Invalid ID provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid filter ID"
        '404':
          description: Filter not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Filter not found"
    delete:
      summary: Delete a filter by ID
      description: Deletes a filter identified by the given ID.
      tags:
        - filter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Filter deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid ID supplied"
        '404':
          description: Filter not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Filter not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
  /filter/:
    post:
      summary: Create a new filter
      description: Creates a new filter and returns the details of the created filter.
      tags:
        - filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Filter 1"
                type:
                  type: string
                  example: "AssetFilter"
                filterParams:
                  type: string
                  nullable: true
                  example: null
                code:
                  type: string
                  nullable: true
                  example: null
              required:
                - name
                - type
                - filterParams
                - code
      responses:
        '201':
          description: Filter created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "Filter 1"
                      type:
                        type: string
                        example: "AssetFilter"
                      filterParams:
                        type: string
                        nullable: true
                        example: null
                      code:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
